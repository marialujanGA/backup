<%# todo funcionando ok %>

<%# sudo /opt/bitnami/ctlscript.sh restart %>

<style>
    /* eliminar boton de cierre del pop up */
    .tf-v1-close {
        visibility: hidden;
    }   
</style>

<%# codigo de typeform  %>
<button id="button" hidden>open form</button>
<script src="//embed.typeform.com/next/embed.js"></script>
<link rel="stylesheet" href="//embed.typeform.com/next/css/popup.css" />


<script>

// obtener datos de url
const currentURL = window.location.href
const pathArray = currentURL.split('/');
const idCourse = pathArray[4];
const homePath = pathArray[2];
const idQuiz = pathArray[6];

const BASE_URL = 'https://encuestas.comunidadalumnos.org/students';

const options = {  'headers' : { 'accept' : 'application/json'  }};

const comprobarUser = () => {
    fetch(`https://${homePath}/api/v1/users/self/profile`, options)
    .then((response) => {
        return response.json()
    }) 
    .then((profile) => {
        // comprobar si el usuario ya completo la encuesta en la RW anterior para no mostrarsela nuevamente
        fetch(`${BASE_URL}/check_residential_week?email=${profile.login_id}&course=BPCP-APR23`).then((response) => {
            return response.json();
            }).then((respuesta) => {
                if (respuesta.result == false) {
                    // si no hay que mostrar la encuesta
                    console.log('No')
                } else {
                    comprobarRol()
            }})
    })
}

const comprobarRol = () => {
    // comprobar el rol del estudiante
    fetch(`https://${homePath}/api/v1/users/self/profile`, options)
    .then((response) => {
        return response.json()
    }) 
    .then((profile) => {
        fetch(`https://${homePath}/api/v1/users/self/enrollments`, options)
        .then((response) => {
            return response.json();
        })
        .then((enrollment) => {
            // comprobar si el estudiante esta enrolado en el curso como estudiante. si lo esta pasa a mostrar la encuesta, sino aqui termina todo
            if (enrollment.some(e => e.type == "StudentEnrollment" && e.course_id == idCourse)) {
                mostrarEncuestaResidential(profile.id)
                console.log("estudiante")
            } else {
                console.log("no es estudiante")
                return
            }
        })        
    })
}

const mostrarEncuestaResidential = async () => {

    // obtener datos del curso
    fetch(`https://${homePath}/api/v1/courses/${idCourse}`, options)
        .then((response) => {
            return response.json();
        })
        .then((course) => {
            // obtener datos del usuario
            fetch('/api/v1/users/self/profile', options)
                .then((response) => {
                    return response.json();
                }).then((profile) => {
                    // corroborar si esta en la BD
                    fetch(`${BASE_URL}/check_residential_week?email=${profile.login_id}&course=${course.course_code}`).then((response) => {
                        return response.json();
                            }).then((respuesta) => {
                                if (respuesta.result == false) {
                            // si no hay que mostrar la encuesta
                            console.log('No')

                            } else {
                                // si no est√° en la BD: crear ventana pop up con encuesta. codigo en https://github.com/Typeform/embed/tree/main/packages/embed
                                // autocompletar los hidden fields de la encuesta con datos obtenidos de canvas a traves de la API: profile y course
                                const { open, close, toggle, refresh } = window.tf.createPopup('trJ1D9Ii', {open: 'load', autoClose:'2000', 
                                hidden: {user_name: profile.name, user_email: profile.login_id, user_sis_id: profile.integration_id, course_code: course.course_code, course_name: course.name, period: 'residential week', university: 'MIT'}})
                                
                                console.log("inserto en BD")}
                                // agregar documento a BD a traves de webhook
                                })
                        })
        })
  
}



window.addEventListener('load', comprobarUser());

</script>
